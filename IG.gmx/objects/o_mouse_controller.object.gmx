<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Mouse_controller_icon</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize mouse controller
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// React on mouse 

if (mouse_check_button_pressed(mb_left)) {
    //############################# Deal with selection ###################################
    //Get pressed objects
    var click = instance_create(mouse_x, mouse_y, o_click)
    var pressed = array_create(0)
    
    var i = 0;
    with (o_interactive) {
        if (collision_func != noone) {
            script_execute(collision_func, click);
            if (global.collision_func_ret == true) {
                pressed[i++] = self
            }
        }
    }
    
    instance_destroy(click);
    //
    
    //Get the one with min depth
    var the_one = noone;
    for (i = 0; i &lt; array_length_1d(pressed); i++) {
        if (the_one == noone)
            the_one = pressed[i]
        else if (pressed[i].depth &lt;= the_one.depth)
            the_one = pressed[i]
    }
    //
    
    // Switch "selected" flag
    if (the_one != noone)
        the_one.selected = !the_one.selected
    //*******************************************************************************
    
    
    // Destroy menu if needed
    if (instance_exists(o_action_menu))
        with (o_action_menu) instance_destroy() 
}    

if (mouse_check_button_pressed(mb_right)) {
    //############################# Create action menu ###################################    
    if (instance_exists(o_action_menu))
        with (o_action_menu) instance_destroy()
    var action_menu = instance_create(mouse_x, mouse_y, o_action_menu);
    if (instance_exists(o_task)) {
        var current_task = instance_find(o_task, 0);
        if (current_task.actions != noone)
            action_menu.actions = filter_actions_by_dependency(ds_map_find_value(current_task.actions, "default"));
    }
    //**************************************************************************************
}    



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
