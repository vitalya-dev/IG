<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>intersection_controller_icon</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Catch CIRCLE message

// o_c is last created circle
var o_c = instance_find(OCircle, instance_number(OCircle) - 1);

// Circle vector intersection
for (var i = 0; i &lt; instance_number(OVector); i++) {
    var o_ab = instance_find(OVector, i);
    var j = vec_cir_intersection(o_ab, o_c);
    if (j[0] != noone) {
        var j_0 = j[0];
        instance_create(j_0[X], j_0[Y], OPunto)
    }
    if (j[1] != noone) {
        var j_1 = j[1];
        instance_create(j_1[X], j_1[Y], OPunto)
    }
}

/////////////////////////////////////////////////////////////////////

// Circle circle intersection
for (var i = 0; i &lt; instance_number(OCircle) - 1; i++) {
    var o_r = instance_find(OCircle, i);
    var j = cir_cir_intersection(o_c, o_r);
    if (j[0] != noone) {
        var j_0 = j[0];
        instance_create(j_0[X], j_0[Y], OPunto)                
    } 
    if (j[1] != noone) {
        var j_1 = j[1];
        instance_create(j_1[X], j_1[Y], OPunto)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Catch VECTOR message

// ab and cd just naming convention
var o_cd = instance_find(OVector, instance_number(OVector) - 1);

// vector vector intersection
for (var i = 0; i &lt; instance_number(OVector) - 1; i++) {
    var o_ab = instance_find(OVector, i);
    var j = vec_vec_intersection(o_ab, o_cd);
    if (j != noone)
        instance_create(j[X], j[Y], OPunto)
}

// vector circle intersection
for (var i = 0; i &lt; instance_number(OCircle); i++) {
    var o_r = instance_find(OCircle, i);
    var j = vec_cir_intersection(o_cd, o_r);
    if (j[0] != noone) {
        var j_0 = j[0];
        instance_create(j_0[X], j_0[Y], OPunto);
    }
    if (j[1] != noone) {
        var j_1 = j[1];
        instance_create(j_1[X], j_1[Y], OPunto);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
